# Multi-stage build for optimized production image
FROM node:18-alpine as builder

# Set working directory
WORKDIR /app

# Copy package files first for better caching
COPY package*.json ./

# Install dependencies with force to resolve peer dependency conflicts
RUN npm install --force && npm cache clean --force

# Copy source code
COPY . .

# Build the application for production
RUN npm run build

# Production stage with nginx
FROM nginx:alpine

# Install gettext for envsubst and wget for health checks
RUN apk add --no-cache gettext wget

# Create nginx user and group (if not exists)
RUN addgroup -g 101 -S nginx || true
RUN adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx || true

# Remove default nginx config
RUN rm -f /etc/nginx/conf.d/default.conf

# Copy custom nginx configuration template
COPY nginx.conf.template /etc/nginx/templates/

# Copy built application
COPY --from=builder /app/dist /usr/share/nginx/html

# Copy environment substitution script
COPY docker-entrypoint.sh /docker-entrypoint.sh
RUN chmod +x /docker-entrypoint.sh

# Fix permissions
RUN chown -R nginx:nginx /usr/share/nginx/html
RUN chown nginx:nginx /docker-entrypoint.sh

# Set default environment variables
ENV VITE_API_BASE_URL=http://localhost:8080
ENV NGINX_PORT=80
ENV VITE_APP_TITLE=FreshMart
ENV VITE_APP_DESCRIPTION="Grocery Management System"

# Expose port
EXPOSE 80

# Use custom entrypoint
ENTRYPOINT ["/docker-entrypoint.sh"]
CMD ["nginx", "-g", "daemon off;"]
